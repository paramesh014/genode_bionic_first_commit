#
# Build
#

build {
	core
	init
	drivers/input/ps2
	drivers/pci
	drivers/framebuffer
	drivers/timer
	drivers/audio_out
	server/nitpicker
	app/avplay
	app/qt_avplay
}

#
# Download media file
#

set media_url "ftp://ftp.untergrund.net/users/ae/dhstv/escape-chotro.mp4"
if {![file exists bin/mediafile]} {
	puts "downloading media file from $media_url"
	catch { exec wget -O bin/mediafile $media_url }
}

create_boot_directory

#
# Generate config
#

set config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route> }

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_if [have_spec pci] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="PCI"/></provides>
	</start>}

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="audio_out_drv">
		<resource name="RAM" quantum="6M"/>
		<provides><service name="Audio_out"/></provides>
	</start>
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
	</start>
	<start name="qt_avplay">
		<resource name="RAM" quantum="2G"/>
		<config>
			<mediafile name="mediafile"/>
		</config>
	</start>
</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core
	init
	timer
	audio_out_drv
	nitpicker
	qt_avplay
	dejavusans.lib.so
	freetype.lib.so
	ld.lib.so
	libc.lib.so
	libc_lock_pipe.lib.so
	libm.lib.so
	libpng.lib.so
	jpeg.lib.so
	qnitpickerviewwidget.lib.so
	qt_core.lib.so
	qt_gui.lib.so
	qt_xml.lib.so
	zlib.lib.so
	avcodec.lib.so
	avformat.lib.so
	avutil.lib.so
	avfilter.lib.so
	swscale.lib.so
	sdl.lib.so
	pthread.lib.so
	avplay
	mediafile
	stdcxx.lib.so
}

# platform-specific modules
lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec         pci] boot_modules pci_drv
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec         ps2] boot_modules ps2_drv

build_boot_image $boot_modules

append qemu_args " -m 512 -soundhw all"

run_genode_until forever

